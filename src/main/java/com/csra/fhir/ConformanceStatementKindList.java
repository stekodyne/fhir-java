//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.11 at 12:22:25 PM PST 
//


package com.csra.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ConformanceStatementKind-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ConformanceStatementKind-list">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="instance"/>
 *     &lt;enumeration value="capability"/>
 *     &lt;enumeration value="requirements"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ConformanceStatementKind-list")
@XmlEnum
public enum ConformanceStatementKindList {


    /**
     * The Conformance instance represents the present capabilities of a specific system instance.  This is the kind returned by OPTIONS for a FHIR server end-point.
     * 
     */
    @XmlEnumValue("instance")
    INSTANCE("instance"),

    /**
     * The Conformance instance represents the capabilities of a system or piece of software, independent of a particular installation.
     * 
     */
    @XmlEnumValue("capability")
    CAPABILITY("capability"),

    /**
     * The Conformance instance represents a set of requirements for other systems to meet; e.g. as part of an implementation guide or 'request for proposal'.
     * 
     */
    @XmlEnumValue("requirements")
    REQUIREMENTS("requirements");
    private final java.lang.String value;

    ConformanceStatementKindList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static ConformanceStatementKindList fromValue(java.lang.String v) {
        for (ConformanceStatementKindList c: ConformanceStatementKindList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
